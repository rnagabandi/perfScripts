<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers_Logica" enabled="false">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value"> application/json</stringProp>
          </elementProp>
          <elementProp name="userId" elementType="Header">
            <stringProp name="Header.name">userId</stringProp>
            <stringProp name="Header.value"> 6002:6003:760e9c3442a741ddb4c0bed4613a4b18</stringProp>
          </elementProp>
          <elementProp name="Authorization" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value"> Bearer eyJhbGciOiJSUzI1NiJ9.eyJqdGkiOiJmMTJiMzY2Mi05MmVhLTQ0NWYtOGRiYy1jOWY5M2Y1OTI2NGIiLCJleHAiOjE0NTg3NDc4NjgsIm5iZiI6MCwiaWF0IjoxNDU0NDI3ODY4LCJpc3MiOiJodHRwOi8vMTcyLjE2LjAuMjE2OjgwODAvYXV0aC9yZWFsbXMvUmVhbG0xIiwiYXVkIjoidXNlci1zZXJ2aWNlIiwic3ViIjoiZGFmZDY2YWItMTFmMS00NzMwLWE3NDQtMDNjNDc1OGE5ZGMwIiwiYXpwIjoidXNlci1zZXJ2aWNlIiwic2Vzc2lvbl9zdGF0ZSI6IjQ4OTIyODA0LWQ4M2EtNDRjYi04ZTlkLWIxMzdiM2Y3NzkxOCIsImNsaWVudF9zZXNzaW9uIjoiM2JjNDM5YzYtZGFiMi00YTZkLTgxNWItMTNjOWVmNTI5ODY1IiwiYWxsb3dlZC1vcmlnaW5zIjpbXSwicmVzb3VyY2VfYWNjZXNzIjp7ImNybS1wcm9maWxlcyI6eyJyb2xlcyI6WyJhZG1pbiJdfSwiY3JtLXJ1bGVzIjp7InJvbGVzIjpbImFkbWluIl19LCJjcm0tYWN0aXZpdHlzdHJlYW0iOnsicm9sZXMiOlsiYWRtaW4iXX0sInNlY3VyaXR5LWFkbWluLWNvbnNvbGUiOnsicm9sZXMiOlsiYWRtaW4iXX0sImFjdGl2aXR5LXN0cmVhbS13ZWIiOnsicm9sZXMiOlsiYWRtaW4iXX0sImJsb2Itc3RvcmUtd2ViIjp7InJvbGVzIjpbImFkbWluIl19LCJjcm0tbm90aWZpY2F0aW9uLXdlYiI6eyJyb2xlcyI6WyJhZG1pbiJdfSwiYnJva2VyIjp7InJvbGVzIjpbInJlYWQtdG9rZW4iXX0sInNvY2lhbC13ZWIiOnsicm9sZXMiOlsiYWRtaW4iXX0sImxhYmVscy13ZWIiOnsicm9sZXMiOlsiYWRtaW4iXX0sInRhbGVudC1lbnRpdHktbGF5ZXIiOnsicm9sZXMiOlsiYWRtaW4iXX0sImxhYmVscy1iaXotd2ViIjp7InJvbGVzIjpbImFkbWluIl19LCJzZWFyY2gtYW5kLW1hdGNoLXNlcnZpY2UiOnsicm9sZXMiOlsiYWRtaW4iXX0sImNybS1jYW1wYWlnbnMiOnsicm9sZXMiOlsiYWRtaW4iXX0sImNybS1waXBlbGluZSI6eyJyb2xlcyI6WyJhZG1pbiJdfSwiY3JtLXNlYXJjaC1iaXotd2ViIjp7InJvbGVzIjpbImFkbWluIl19LCJjcm0tZW1haWxzIjp7InJvbGVzIjpbImFkbWluIl19LCJ0YWxlbnQtYml6LUxheWVyIjp7InJvbGVzIjpbImFkbWluIl19LCJwcm9maWxlcy13ZWIiOnsicm9sZXMiOlsiYWRtaW4iXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJ2aWV3LXByb2ZpbGUiXX0sImNybS1qb2Jwb3N0LXdlYiI6eyJyb2xlcyI6WyJhZG1pbiJdfX0sIm5hbWUiOiJ0ZXN0ZXIgbG9naWNhIiwicHJlZmVycmVkX3VzZXJuYW1lIjoidGVzdGVyQGxvZ2ljYS5jb20iLCJnaXZlbl9uYW1lIjoidGVzdGVyIiwiZmFtaWx5X25hbWUiOiJsb2dpY2EiLCJlbWFpbCI6InRlc3RlckBsb2dpY2EuY29tIn0.h5fGweGaGVh3uatRxkHiyr8S2vY8JHSaWUkPoOw9OBLX_vvdUgBoi7_doFufr2UZY2vbFmAduZ52f3JLIgWwrqXBxNrEShPTExU2oUW9rIMfA1-RFtlf0YAdzfL-7511vnQvbWINVBRWbgYAK04QQvEN1-wkWkEaDkzokKQjJl4TaoGU2_oTGVdScMK-rmuaj2kieDd813NEnpZJc3BEG5kYP1cCJrVNbfSx5TN1CMAUZ7bYgnJL5af35bDNNXZFtUncEEuvDa9UaRcREjT4qkuRYBQLGF7FqUuUQ_jP5EsTHwYeURQYrpp6WffCp8zNlrNdBsDwo4PnMosck9nF2Q</stringProp>
          </elementProp>
          <elementProp name="tenantId" elementType="Header">
            <stringProp name="Header.name">tenantId</stringProp>
            <stringProp name="Header.value"> 6002</stringProp>
          </elementProp>
          <elementProp name="realmName" elementType="Header">
            <stringProp name="Header.name">realmName</stringProp>
            <stringProp name="Header.value"> Realm1</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
        <collectionProp name="Asserion.test_strings">
          <stringProp name="49586">200</stringProp>
        </collectionProp>
        <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
        <boolProp name="Assertion.assume_success">false</boolProp>
        <intProp name="Assertion.test_type">16</intProp>
      </ResponseAssertion>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="false">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SocialService" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1455602442000</longProp>
        <longProp name="ThreadGroup.end_time">1455602442000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateSingleSocialProfile" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;candidateId&quot;: &quot;${canId}&quot;,&#xd;
&quot;interests&quot;: [&#xd;
  &quot;cricket&quot;&#xd;
],&#xd;
&quot;hobbies&quot;: [&#xd;
  &quot;movies&quot;&#xd;
],&#xd;
&quot;professionalSummary&quot;: &quot;test&quot;,&#xd;
&quot;objective&quot;: &quot;test&quot;,&#xd;
&quot;stackoverflowRank&quot;: 44,&#xd;
&quot;imageUrl&quot;: &quot;http://facebook.com&quot;,&#xd;
&quot;linkedinUrl&quot;: &quot;http://facebook.com&quot;,&#xd;
&quot;twitterUrl&quot;: &quot;http://facebook.com&quot;,&#xd;
&quot;facebookUrl&quot;: &quot;http://facebook.com&quot;,&#xd;
&quot;blogLink&quot;: &quot;http://facebook.org&quot;,&#xd;
&#xd;
&quot;followers&quot;: [&#xd;
  {&#xd;
    &quot;connectType&quot;: &quot;string&quot;,&#xd;
    &quot;connectName&quot;: &quot;string&quot;,&#xd;
    &quot;email&quot;: &quot;string@gmail.com&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;9066812182&quot;,&#xd;
    &quot;connectURL&quot;: &quot;http://facebook.com&quot;,&#xd;
    &quot;imageURL&quot;: &quot;http://facebook.com&quot;,&#xd;
    &quot;createdBy&quot;: &quot;string&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;string&quot;&#xd;
  }&#xd;
],&#xd;
&quot;following&quot;: [&#xd;
  {&#xd;
    &quot;connectType&quot;: &quot;string&quot;,&#xd;
    &quot;connectName&quot;: &quot;string&quot;,&#xd;
    &quot;email&quot;: &quot;string@gmail.com&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;9066812182&quot;,&#xd;
    &quot;connectURL&quot;: &quot;http://facebook.com&quot;,&#xd;
    &quot;imageURL&quot;: &quot;http://facebook.com&quot;,&#xd;
    &quot;createdBy&quot;: &quot;string&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;string&quot;&#xd;
  }&#xd;
],&#xd;
 &quot;socialExt&quot;: {&#xd;
   &quot;linkedInConnectionsCount&quot;: 1,&#xd;
   &quot;originalGithubRepoCount&quot;: 2,&#xd;
   &quot;stackoverflowBadgeCount&quot;: 3,&#xd;
   &quot;githubPublicRepos&quot;: 4,&#xd;
   &quot;githubFollowersCount&quot;: 5,&#xd;
   &quot;githubFollowingCount&quot;: 6,&#xd;
   &quot;stackoverflowReputationPoints&quot;: 7,&#xd;
   &quot;stackoverflowUserId&quot;: &quot;so.com&quot;,&#xd;
   &quot;askUbuntuUserId&quot;: &quot;au.com&quot;,&#xd;
   &quot;githubUserId&quot;: &quot;gu.com&quot;&#xd;
 }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.2.75</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">social-web/api/social</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">c:\</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">canId</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateBulkSocialProfile" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
{&#xd;
&quot;candidateId&quot;: &quot;${candId}&quot;,&#xd;
&quot;interests&quot;: [&#xd;
  &quot;cricket&quot;&#xd;
],&#xd;
&quot;hobbies&quot;: [&#xd;
  &quot;movies&quot;&#xd;
],&#xd;
&quot;professionalSummary&quot;: &quot;test&quot;,&#xd;
&quot;objective&quot;: &quot;test&quot;,&#xd;
&quot;stackoverflowRank&quot;: 44,&#xd;
&quot;imageUrl&quot;: &quot;http://facebook.com&quot;,&#xd;
&quot;linkedinUrl&quot;: &quot;http://facebook.com&quot;,&#xd;
&quot;twitterUrl&quot;: &quot;http://facebook.com&quot;,&#xd;
&quot;facebookUrl&quot;: &quot;http://facebook.com&quot;,&#xd;
&quot;blogLink&quot;: &quot;http://facebook.org&quot;,&#xd;
&#xd;
&quot;followers&quot;: [&#xd;
  {&#xd;
    &quot;connectType&quot;: &quot;string&quot;,&#xd;
    &quot;connectName&quot;: &quot;string&quot;,&#xd;
    &quot;email&quot;: &quot;string@gmail.com&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;9066812182&quot;,&#xd;
    &quot;connectURL&quot;: &quot;http://facebook.com&quot;,&#xd;
    &quot;imageURL&quot;: &quot;http://facebook.com&quot;,&#xd;
    &quot;createdBy&quot;: &quot;string&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;string&quot;&#xd;
  }&#xd;
],&#xd;
&quot;following&quot;: [&#xd;
  {&#xd;
    &quot;connectType&quot;: &quot;string&quot;,&#xd;
    &quot;connectName&quot;: &quot;string&quot;,&#xd;
    &quot;email&quot;: &quot;string@gmail.com&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;9066812182&quot;,&#xd;
    &quot;connectURL&quot;: &quot;http://facebook.com&quot;,&#xd;
    &quot;imageURL&quot;: &quot;http://facebook.com&quot;,&#xd;
    &quot;createdBy&quot;: &quot;string&quot;,&#xd;
    &quot;modifiedBy&quot;: &quot;string&quot;&#xd;
  }&#xd;
],&#xd;
 &quot;socialExt&quot;: {&#xd;
   &quot;linkedInConnectionsCount&quot;: 1,&#xd;
   &quot;originalGithubRepoCount&quot;: 2,&#xd;
   &quot;stackoverflowBadgeCount&quot;: 3,&#xd;
   &quot;githubPublicRepos&quot;: 4,&#xd;
   &quot;githubFollowersCount&quot;: 5,&#xd;
   &quot;githubFollowingCount&quot;: 6,&#xd;
   &quot;stackoverflowReputationPoints&quot;: 7,&#xd;
   &quot;stackoverflowUserId&quot;: &quot;so.com&quot;,&#xd;
   &quot;askUbuntuUserId&quot;: &quot;au.com&quot;,&#xd;
   &quot;githubUserId&quot;: &quot;gu.com&quot;&#xd;
 }&#xd;
}&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.2.75</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">c:\</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">canId</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetSocialDetailsByCandidateId" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.2.75</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">social-web/api/social?candidateId=${canId}&amp;projection=full</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Get Social details by giving candidateId ; candidateId and projection both fields are mandatory</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">c:\</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">canId</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
